<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="box_8libmd_8cc" kind="file" language="C++">
    <compoundname>box.libmd.cc</compoundname>
    <includes refid="libmd_8h" local="yes">../libmd.h</includes>
    <includedby refid="libmd_8cc" local="yes">libmd.cc</includedby>
    <incdepgraph>
      <node id="10">
        <label>list</label>
      </node>
      <node id="41">
        <label>md/index.md.libmd.cc</label>
        <link refid="index_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>md/hooks.md.libmd.cc</label>
        <link refid="hooks_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>libmd-src/mongepatches.libmd.cc</label>
        <link refid="mongepatches_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="15">
        <label>limits</label>
      </node>
      <node id="38">
        <label>md/interaction.md.libmd.cc</label>
        <link refid="interaction_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libmd-src/variadic_vars.libmd.cc</label>
        <link refid="variadic__vars_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libmd-src/interact.libmd.cc</label>
        <link refid="interact_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>md/distances.md.libmd.cc</label>
        <link refid="distances_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>md/energy.md.libmd.cc</label>
        <link refid="energy_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libmd-src/pairpotentials.libmd.cc</label>
        <link refid="pairpotentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>libmd-src/mp.libmd.cc</label>
        <link refid="mp_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>libmd-src/box.libmd.cc</label>
        <link refid="box_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>md/bonds.md.libmd.cc</label>
        <link refid="bonds_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libmd-src/integrators.libmd.cc</label>
        <link refid="integrators_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="24">
        <label>libmd-src/autodiff.libmd.cc</label>
        <link refid="autodiff_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unordered_set</label>
      </node>
      <node id="28">
        <label>libmd-src/boundaryconditions.libmd.cc</label>
        <link refid="boundaryconditions_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>md/particles.md.libmd.cc</label>
        <link refid="particles_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libmd-src/particle.libmd.cc</label>
        <link refid="particle_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>libmd-src/autodiff2.libmd.cc</label>
        <link refid="autodiff2_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmd-src/bcond.libmd.cc</label>
        <link refid="bcond_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libmd-src/potentials.libmd.cc</label>
        <link refid="potentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random</label>
      </node>
      <node id="21">
        <label>libmd-src/enums.libmd.h</label>
        <link refid="enums_8libmd_8h"/>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="48">
        <label>md/importexport.md.libmd.cc</label>
        <link refid="importexport_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>md/periodicity.md.libmd.cc</label>
        <link refid="periodicity_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libmd-src/index.libmd.cc</label>
        <link refid="index_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libmd-src/externalforces.libmd.cc</label>
        <link refid="externalforces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stack</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="47">
        <label>md/sp.md.libmd.cc</label>
        <link refid="sp_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="37">
        <label>libmd-src/md.libmd.cc</label>
        <link refid="md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="22">
        <label>libmd.cc</label>
        <link refid="libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../libmd.h</label>
        <link refid="libmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libmd-src/hooks.libmd.cc</label>
        <link refid="hooks_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
      <node id="18">
        <label>chrono</label>
      </node>
      <node id="44">
        <label>md/setget.md.libmd.cc</label>
        <link refid="setget_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>libmd-src/mpmd.libmd.cc</label>
        <link refid="mpmd_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="40">
        <label>md/forces.md.libmd.cc</label>
        <link refid="forces_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmd-src/error.libmd.cc</label>
        <link refid="error_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>md/integrator.md.libmd.cc</label>
        <link refid="integrator_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="20">
        <label>libmd-src/macros.libmd.h</label>
        <link refid="macros_8libmd_8h"/>
      </node>
      <node id="27">
        <label>libmd-src/forces.libmd.cc</label>
        <link refid="forces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>libmd-src/md/index.md.libmd.cc</label>
        <link refid="index_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libmd-src/md/hooks.md.libmd.cc</label>
        <link refid="hooks_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmd-src/mongepatches.libmd.cc</label>
        <link refid="mongepatches_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libmd-src/md/interaction.md.libmd.cc</label>
        <link refid="interaction_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libmd-src/variadic_vars.libmd.cc</label>
        <link refid="variadic__vars_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>libmd-src/interact.libmd.cc</label>
        <link refid="interact_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>libmd-src/md/distances.md.libmd.cc</label>
        <link refid="distances_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libmd-src/md/energy.md.libmd.cc</label>
        <link refid="energy_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libmd-src/pairpotentials.libmd.cc</label>
        <link refid="pairpotentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libmd-src/mp.libmd.cc</label>
        <link refid="mp_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libmd-src/box.libmd.cc</label>
        <link refid="box_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libmd-src/md/bonds.md.libmd.cc</label>
        <link refid="bonds_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>libmd-src/integrators.libmd.cc</label>
        <link refid="integrators_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libmd-src/autodiff.libmd.cc</label>
        <link refid="autodiff_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libmd-src/boundaryconditions.libmd.cc</label>
        <link refid="boundaryconditions_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libmd-src/md/particles.md.libmd.cc</label>
        <link refid="particles_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libmd-src/particle.libmd.cc</label>
        <link refid="particle_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libmd-src/autodiff2.libmd.cc</label>
        <link refid="autodiff2_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>libmd-src/bcond.libmd.cc</label>
        <link refid="bcond_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libmd-src/potentials.libmd.cc</label>
        <link refid="potentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libmd-src/md/importexport.md.libmd.cc</label>
        <link refid="importexport_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libmd-src/md/periodicity.md.libmd.cc</label>
        <link refid="periodicity_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>libmd-src/index.libmd.cc</label>
        <link refid="index_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libmd-src/externalforces.libmd.cc</label>
        <link refid="externalforces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libmd-src/md/sp.md.libmd.cc</label>
        <link refid="sp_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>libmd-src/md.libmd.cc</label>
        <link refid="md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libmd.cc</label>
        <link refid="libmd_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libmd.h</label>
        <link refid="libmd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>libmd-src/hooks.libmd.cc</label>
        <link refid="hooks_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>libmd-src/md/setget.md.libmd.cc</label>
        <link refid="setget_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libmd-src/mpmd.libmd.cc</label>
        <link refid="mpmd_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libmd-src/md/forces.md.libmd.cc</label>
        <link refid="forces_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libmd-src/error.libmd.cc</label>
        <link refid="error_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmd-src/md/integrator.md.libmd.cc</label>
        <link refid="integrator_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>libmd-src/forces.libmd.cc</label>
        <link refid="forces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="box_8libmd_8cc_a4384389855e24d346feb2e60f23afb0b_1a4384389855e24d346feb2e60f23afb0b" prot="public" static="no">
        <name>__libmd_src_file__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmd-src/box.libmd.cc" line="1" column="9" bodyfile="libmd-src/box.libmd.cc" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" prot="public" static="no" mutable="no">
        <type>const <ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
        <definition>const ldf mxinv_eps</definition>
        <argsstring></argsstring>
        <name>mxinv_eps</name>
        <initializer>=<ref refid="autodiff2_8libmd_8cc_a23c702b1c84c5e7802e4cbbec9adf8f3_1a23c702b1c84c5e7802e4cbbec9adf8f3" kindref="member">sqrt</ref>(std::numeric_limits&lt;<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>&gt;::epsilon())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmd-src/box.libmd.cc" line="6" column="11" bodyfile="libmd-src/box.libmd.cc" bodystart="6" bodyend="-1"/>
        <referencedby refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" compoundref="box_8libmd_8cc" startline="64" endline="114">det</referencedby>
        <referencedby refid="structbox_a0dd5c44041b2e9431748d8f04e4890f7_1a0dd5c44041b2e9431748d8f04e4890f7" compoundref="box_8libmd_8cc" startline="158" endline="169">box&lt; dim &gt;::invert_box</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
        <definition>ldf det</definition>
        <argsstring>(ldf Ain[dim][dim], ldf B[dim][dim])</argsstring>
        <name>det</name>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>Ain</declname>
          <array>[dim][dim]</array>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>B</declname>
          <array>[dim][dim]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return the determinant of the array <computeroutput>Ain</computeroutput>, and store its inverse in the array <computeroutput>B</computeroutput> if the determinant is nonzero.</para>
        </inbodydescription>
        <location file="libmd-src/box.libmd.cc" line="64" column="16" bodyfile="libmd-src/box.libmd.cc" bodystart="64" bodyend="114"/>
        <references refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" compoundref="autodiff_8libmd_8cc" startline="364" endline="367">abs</references>
        <references refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" compoundref="box_8libmd_8cc" startline="6">mxinv_eps</references>
        <referencedby refid="structmp_a2c5825d8f21771e40b120082e50827d2_1a2c5825d8f21771e40b120082e50827d2" compoundref="mp_8libmd_8cc" startline="123" endline="131">mp&lt; dim &gt;::ginv</referencedby>
        <referencedby refid="structbox_a0dd5c44041b2e9431748d8f04e4890f7_1a0dd5c44041b2e9431748d8f04e4890f7" compoundref="box_8libmd_8cc" startline="158" endline="169">box&lt; dim &gt;::invert_box</referencedby>
        <referencedby refid="structmp_abd53fa81c114885220760369e00581e2_1abd53fa81c114885220760369e00581e2" compoundref="mp_8libmd_8cc" startline="133" endline="141">mp&lt; dim &gt;::sqrt_ginv</referencedby>
      </memberdef>
      <memberdef kind="function" id="box_8libmd_8cc_a6cd0aa49a5b7e5f19e536645a57ae45d_1a6cd0aa49a5b7e5f19e536645a57ae45d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
        <definition>ldf det</definition>
        <argsstring>(ldf Ain[2][2], ldf B[2][2])</argsstring>
        <name>det</name>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>Ain</declname>
          <array>[2][2]</array>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>B</declname>
          <array>[2][2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return the determinant of the array <computeroutput>Ain</computeroutput>, and store its inverse in the array <computeroutput>B</computeroutput> if the determinant is nonzero. Specialized function for dim=2</para>
        </inbodydescription>
        <location file="libmd-src/box.libmd.cc" line="116" column="5" bodyfile="libmd-src/box.libmd.cc" bodystart="116" bodyend="131"/>
        <references refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" compoundref="autodiff_8libmd_8cc" startline="364" endline="367">abs</references>
        <references refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" compoundref="box_8libmd_8cc" startline="6">mxinv_eps</references>
      </memberdef>
      <memberdef kind="function" id="box_8libmd_8cc_a9810dfd3857d9af2517cebc5b8f05cf8_1a9810dfd3857d9af2517cebc5b8f05cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
        <definition>ldf det</definition>
        <argsstring>(ldf Ain[3][3], ldf B[3][3])</argsstring>
        <name>det</name>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>Ain</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>B</declname>
          <array>[3][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return the determinant of the array <computeroutput>Ain</computeroutput>, and store its inverse in the array <computeroutput>B</computeroutput> if the determinant is nonzero. Specialized function for dim=3</para>
        </inbodydescription>
        <location file="libmd-src/box.libmd.cc" line="133" column="5" bodyfile="libmd-src/box.libmd.cc" bodystart="133" bodyend="155"/>
        <references refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" compoundref="autodiff_8libmd_8cc" startline="364" endline="367">abs</references>
        <references refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" compoundref="box_8libmd_8cc" startline="6">mxinv_eps</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="box_8libmd_8cc_a4384389855e24d346feb2e60f23afb0b_1a4384389855e24d346feb2e60f23afb0b" refkind="member"><highlight class="preprocessor">#define<sp/>__libmd_src_file__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>libmd_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libmd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/><ref refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" kindref="member">mxinv_eps</ref>=<ref refid="autodiff_8libmd_8cc_af33bda4d5a7fc8ad1679ec339a730045_1af33bda4d5a7fc8ad1679ec339a730045" kindref="member">sqrt</ref>(std::numeric_limits&lt;ldf&gt;::epsilon());<sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>inversion<sp/>cutoff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structbox_a0fb2c48d4220723138af6dd47a60fbe6_1a0fb2c48d4220723138af6dd47a60fbe6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/><ref refid="structbox_a0fb2c48d4220723138af6dd47a60fbe6_1a0fb2c48d4220723138af6dd47a60fbe6" kindref="member">box&lt;dim&gt;::box</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structbcond" kindref="compound">bcond</ref>,0,dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_af8ecdd9d7d0f3cdced7f9a83dc659959_1af8ecdd9d7d0f3cdced7f9a83dc659959" kindref="member">uc</ref>));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d=0;d&lt;dim;d++)<sp/>L[d]=10.0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(vshear,0,dim*dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(Lshear,0,dim*dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(LshearInv,0,dim*dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d=0;d&lt;dim;d++)<sp/>Lshear[d][d]=L[d],LshearInv[d][d]=1.0/L[d];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>useLshear=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structbox_a67d02b9cc9c1697134b5d22b98e462d4_1a67d02b9cc9c1697134b5d22b98e462d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structbox_a67d02b9cc9c1697134b5d22b98e462d4_1a67d02b9cc9c1697134b5d22b98e462d4" kindref="member">box&lt;dim&gt;::shear_boundary</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>j,<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>velocity)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==j)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_a4d48c340b3c83579a8d58cb20a320f84_1a4d48c340b3c83579a8d58cb20a320f84" kindref="member">ERROR</ref>(</highlight><highlight class="stringliteral">&quot;shear<sp/>velocity<sp/>must<sp/>be<sp/>perpendicular<sp/>to<sp/>boundary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>vshear[i][j]=velocity;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d=0;d&lt;dim;d++)<sp/>Lshear[d][d]=L[d],LshearInv[d][d]=1.0/L[d];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>useLshear=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbcond" kindref="compound">bcond</ref>[j]=<ref refid="struct_b_c_o_n_d_a565f9cf3347ba75b9bfc64ec12d69946_1a565f9cf3347ba75b9bfc64ec12d69946ae60ceea4da62257e104c5ac6aa720a31" kindref="member">BCOND::BOXSHEAR</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structbox_a91faa4ff193900b8701448514d10b5c6_1a91faa4ff193900b8701448514d10b5c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structbox_a91faa4ff193900b8701448514d10b5c6_1a91faa4ff193900b8701448514d10b5c6" kindref="member">box&lt;dim&gt;::skew_boundary</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,<sp/><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>j,<sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>displacement)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==j)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_a4d48c340b3c83579a8d58cb20a320f84_1a4d48c340b3c83579a8d58cb20a320f84" kindref="member">ERROR</ref>(</highlight><highlight class="stringliteral">&quot;shear<sp/>displacement<sp/>must<sp/>be<sp/>perpendicular<sp/>to<sp/>boundary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(Lshear,0,dim*dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d=0;d&lt;dim;d++)<sp/>Lshear[d][d]=L[d];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Lshear[i][j]=displacement;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>useLshear=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbcond" kindref="compound">bcond</ref>[j]=<ref refid="struct_b_c_o_n_d_a565f9cf3347ba75b9bfc64ec12d69946_1a565f9cf3347ba75b9bfc64ec12d69946ae60ceea4da62257e104c5ac6aa720a31" kindref="member">BCOND::BOXSHEAR</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>invert_box();</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/><ref refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" kindref="member">det</ref><sp/>(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>Ain[dim][dim],<sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>B[dim][dim])</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sgn<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>d<sp/>=<sp/>1,<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clone<sp/>Ain<sp/>so<sp/>that<sp/>it<sp/>is<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>A[dim][dim];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(&amp;Ain[0][0],<sp/>&amp;Ain[0][0]+dim*dim,&amp;A[0][0]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>B<sp/>to<sp/>identity<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(B,0,dim*dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref>));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;dim;i++)<sp/>B[i][i]=1.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>largest<sp/>pivot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>i+1;<sp/>k<sp/>&lt;<sp/>dim;<sp/>k++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(A[j][i])<sp/>&lt;<sp/><ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(A[k][i]))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>nonzero<sp/>pivot<sp/>implies<sp/>singular<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(A[j][i])<sp/>&lt;<sp/><ref refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" kindref="member">mxinv_eps</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>rows<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>i)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sgn<sp/>*=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>sign<sp/>of<sp/>determinant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap_ranges(A[i]+i,<sp/>A[i]+dim,<sp/>A[j]+i);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap_ranges(B[i],<sp/>B[i]+dim,<sp/>B[j]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>other<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>A[i][i]/d;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>dim;<sp/>j++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>A[j][i]/d;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>i;<sp/>k<sp/>&lt;<sp/>dim;<sp/>k++)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A[j][k]<sp/>=<sp/>t1<sp/>*<sp/>A[j][k]<sp/>-<sp/>t2<sp/>*<sp/>A[i][k];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>dim;<sp/>k++)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[j][k]<sp/>=<sp/>t1<sp/>*<sp/>B[j][k]<sp/>-<sp/>t2<sp/>*<sp/>B[i][k];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/>t1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>dim;<sp/>j++)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[i][j]<sp/>/=<sp/>d;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sgn<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="box_8libmd_8cc_a6cd0aa49a5b7e5f19e536645a57ae45d_1a6cd0aa49a5b7e5f19e536645a57ae45d" refkind="member"><highlight class="normal"><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/><ref refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" kindref="member">det</ref><sp/>(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>Ain[2][2],<sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>B[2][2])</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>d<sp/>=<sp/>Ain[0][0]*Ain[1][1]<sp/>-<sp/>Ain[0][1]*Ain[1][0];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(d)<sp/>&lt;<sp/><ref refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" kindref="member">mxinv_eps</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>Ain[1][1]<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>-Ain[0][1]<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>-Ain[1][0]<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>Ain[0][0]<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="box_8libmd_8cc_a9810dfd3857d9af2517cebc5b8f05cf8_1a9810dfd3857d9af2517cebc5b8f05cf8" refkind="member"><highlight class="normal"><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/><ref refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" kindref="member">det</ref><sp/>(<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>Ain[3][3],<sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>B[3][3])</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>d<sp/>=<sp/><sp/><sp/>Ain[0][0]<sp/>*<sp/>(Ain[1][1]*Ain[2][2]<sp/>-<sp/>Ain[1][2]*Ain[2][1])</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Ain[0][1]<sp/>*<sp/>(Ain[1][2]*Ain[2][0]<sp/>-<sp/>Ain[1][0]*Ain[2][2])</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Ain[0][2]<sp/>*<sp/>(Ain[1][0]*Ain[2][1]<sp/>-<sp/>Ain[1][1]*Ain[2][0]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(d)<sp/>&lt;<sp/><ref refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" kindref="member">mxinv_eps</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][0]<sp/>=<sp/>(Ain[1][1]*Ain[2][2]<sp/>-<sp/>Ain[1][2]*Ain[2][1])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][0]<sp/>=<sp/>(Ain[1][2]*Ain[2][0]<sp/>-<sp/>Ain[1][0]*Ain[2][2])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][0]<sp/>=<sp/>(Ain[1][0]*Ain[2][1]<sp/>-<sp/>Ain[1][1]*Ain[2][0])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][1]<sp/>=<sp/>(Ain[2][1]*Ain[0][2]<sp/>-<sp/>Ain[2][2]*Ain[0][1])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][1]<sp/>=<sp/>(Ain[2][2]*Ain[0][0]<sp/>-<sp/>Ain[2][0]*Ain[0][2])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][1]<sp/>=<sp/>(Ain[2][0]*Ain[0][1]<sp/>-<sp/>Ain[2][1]*Ain[0][0])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>B[0][2]<sp/>=<sp/>(Ain[0][1]*Ain[1][2]<sp/>-<sp/>Ain[0][2]*Ain[1][1])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>B[1][2]<sp/>=<sp/>(Ain[0][2]*Ain[1][0]<sp/>-<sp/>Ain[0][0]*Ain[1][2])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>B[2][2]<sp/>=<sp/>(Ain[0][0]*Ain[1][1]<sp/>-<sp/>Ain[0][1]*Ain[1][0])<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structbox_a0dd5c44041b2e9431748d8f04e4890f7_1a0dd5c44041b2e9431748d8f04e4890f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structbox_a0dd5c44041b2e9431748d8f04e4890f7_1a0dd5c44041b2e9431748d8f04e4890f7" kindref="member">box&lt;dim&gt;::invert_box</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>d<sp/>=<sp/><ref refid="box_8libmd_8cc_a40b2bff2b597ae82496372ce80675e68_1a40b2bff2b597ae82496372ce80675e68" kindref="member">det</ref>(Lshear,<sp/>LshearInv);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(d)<sp/>&lt;<sp/><ref refid="box_8libmd_8cc_ace215f31f28f0e6769853d07f36afc3f_1ace215f31f28f0e6769853d07f36afc3f" kindref="member">mxinv_eps</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_a4d48c340b3c83579a8d58cb20a320f84_1a4d48c340b3c83579a8d58cb20a320f84" kindref="member">ERROR</ref>(</highlight><highlight class="stringliteral">&quot;singular<sp/>matrix<sp/>encountered<sp/>during<sp/>box<sp/>matrix<sp/>inversion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="libmd-src/box.libmd.cc"/>
  </compounddef>
</doxygen>
