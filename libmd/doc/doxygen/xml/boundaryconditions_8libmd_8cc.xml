<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="boundaryconditions_8libmd_8cc" kind="file" language="C++">
    <compoundname>boundaryconditions.libmd.cc</compoundname>
    <includes refid="libmd_8h" local="yes">../libmd.h</includes>
    <includedby refid="libmd_8cc" local="yes">libmd.cc</includedby>
    <incdepgraph>
      <node id="10">
        <label>list</label>
      </node>
      <node id="41">
        <label>md/index.md.libmd.cc</label>
        <link refid="index_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>md/hooks.md.libmd.cc</label>
        <link refid="hooks_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>libmd-src/mongepatches.libmd.cc</label>
        <link refid="mongepatches_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="15">
        <label>limits</label>
      </node>
      <node id="38">
        <label>md/interaction.md.libmd.cc</label>
        <link refid="interaction_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libmd-src/variadic_vars.libmd.cc</label>
        <link refid="variadic__vars_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libmd-src/interact.libmd.cc</label>
        <link refid="interact_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>md/distances.md.libmd.cc</label>
        <link refid="distances_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>md/energy.md.libmd.cc</label>
        <link refid="energy_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libmd-src/pairpotentials.libmd.cc</label>
        <link refid="pairpotentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>libmd-src/mp.libmd.cc</label>
        <link refid="mp_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>libmd-src/box.libmd.cc</label>
        <link refid="box_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>md/bonds.md.libmd.cc</label>
        <link refid="bonds_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libmd-src/integrators.libmd.cc</label>
        <link refid="integrators_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="24">
        <label>libmd-src/autodiff.libmd.cc</label>
        <link refid="autodiff_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unordered_set</label>
      </node>
      <node id="1">
        <label>libmd-src/boundaryconditions.libmd.cc</label>
        <link refid="boundaryconditions_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>md/particles.md.libmd.cc</label>
        <link refid="particles_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libmd-src/particle.libmd.cc</label>
        <link refid="particle_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>libmd-src/autodiff2.libmd.cc</label>
        <link refid="autodiff2_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmd-src/bcond.libmd.cc</label>
        <link refid="bcond_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libmd-src/potentials.libmd.cc</label>
        <link refid="potentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>random</label>
      </node>
      <node id="21">
        <label>libmd-src/enums.libmd.h</label>
        <link refid="enums_8libmd_8h"/>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="48">
        <label>md/importexport.md.libmd.cc</label>
        <link refid="importexport_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>md/periodicity.md.libmd.cc</label>
        <link refid="periodicity_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libmd-src/index.libmd.cc</label>
        <link refid="index_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libmd-src/externalforces.libmd.cc</label>
        <link refid="externalforces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stack</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="47">
        <label>md/sp.md.libmd.cc</label>
        <link refid="sp_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="37">
        <label>libmd-src/md.libmd.cc</label>
        <link refid="md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="22">
        <label>libmd.cc</label>
        <link refid="libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../libmd.h</label>
        <link refid="libmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libmd-src/hooks.libmd.cc</label>
        <link refid="hooks_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
      <node id="18">
        <label>chrono</label>
      </node>
      <node id="44">
        <label>md/setget.md.libmd.cc</label>
        <link refid="setget_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>libmd-src/mpmd.libmd.cc</label>
        <link refid="mpmd_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="40">
        <label>md/forces.md.libmd.cc</label>
        <link refid="forces_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmd-src/error.libmd.cc</label>
        <link refid="error_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>md/integrator.md.libmd.cc</label>
        <link refid="integrator_8md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="20">
        <label>libmd-src/macros.libmd.h</label>
        <link refid="macros_8libmd_8h"/>
      </node>
      <node id="27">
        <label>libmd-src/forces.libmd.cc</label>
        <link refid="forces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>libmd-src/md/index.md.libmd.cc</label>
        <link refid="index_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libmd-src/md/hooks.md.libmd.cc</label>
        <link refid="hooks_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmd-src/mongepatches.libmd.cc</label>
        <link refid="mongepatches_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libmd-src/md/interaction.md.libmd.cc</label>
        <link refid="interaction_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libmd-src/variadic_vars.libmd.cc</label>
        <link refid="variadic__vars_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>libmd-src/interact.libmd.cc</label>
        <link refid="interact_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>libmd-src/md/distances.md.libmd.cc</label>
        <link refid="distances_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libmd-src/md/energy.md.libmd.cc</label>
        <link refid="energy_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libmd-src/pairpotentials.libmd.cc</label>
        <link refid="pairpotentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libmd-src/mp.libmd.cc</label>
        <link refid="mp_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libmd-src/box.libmd.cc</label>
        <link refid="box_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libmd-src/md/bonds.md.libmd.cc</label>
        <link refid="bonds_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>libmd-src/integrators.libmd.cc</label>
        <link refid="integrators_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libmd-src/autodiff.libmd.cc</label>
        <link refid="autodiff_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libmd-src/boundaryconditions.libmd.cc</label>
        <link refid="boundaryconditions_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libmd-src/md/particles.md.libmd.cc</label>
        <link refid="particles_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libmd-src/particle.libmd.cc</label>
        <link refid="particle_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libmd-src/autodiff2.libmd.cc</label>
        <link refid="autodiff2_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>libmd-src/bcond.libmd.cc</label>
        <link refid="bcond_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libmd-src/potentials.libmd.cc</label>
        <link refid="potentials_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libmd-src/md/importexport.md.libmd.cc</label>
        <link refid="importexport_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libmd-src/md/periodicity.md.libmd.cc</label>
        <link refid="periodicity_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>libmd-src/index.libmd.cc</label>
        <link refid="index_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libmd-src/externalforces.libmd.cc</label>
        <link refid="externalforces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libmd-src/md/sp.md.libmd.cc</label>
        <link refid="sp_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>libmd-src/md.libmd.cc</label>
        <link refid="md_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libmd.cc</label>
        <link refid="libmd_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libmd.h</label>
        <link refid="libmd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>libmd-src/hooks.libmd.cc</label>
        <link refid="hooks_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>libmd-src/md/setget.md.libmd.cc</label>
        <link refid="setget_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libmd-src/mpmd.libmd.cc</label>
        <link refid="mpmd_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libmd-src/md/forces.md.libmd.cc</label>
        <link refid="forces_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libmd-src/error.libmd.cc</label>
        <link refid="error_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmd-src/md/integrator.md.libmd.cc</label>
        <link refid="integrator_8md_8libmd_8cc"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>libmd-src/forces.libmd.cc</label>
        <link refid="forces_8libmd_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="boundaryconditions_8libmd_8cc_a4384389855e24d346feb2e60f23afb0b_1a4384389855e24d346feb2e60f23afb0b" prot="public" static="no">
        <name>__libmd_src_file__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="1" column="9" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_a125b8967bd2a122e454f6baa1268ee59_1a125b8967bd2a122e454f6baa1268ee59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_NONE</definition>
        <argsstring>(ui d, ui i, void *sys)</argsstring>
        <name>BCOND_NONE</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has no boundary conditions.</para>
<para>This function does nothing</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="6" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="6" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_a97ae56c5ca0f92c083ef8fc369ade6a6_1a97ae56c5ca0f92c083ef8fc369ade6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_NONE</definition>
        <argsstring>(ui d, ldf x[dim], void *sys)</argsstring>
        <name>BCOND_NONE</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>x</declname>
          <array>[dim]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has no boundary conditions.</para>
<para>This function does nothing</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="19" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="19" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_a3ce0157b0762adc9e1789ba0362b9041_1a3ce0157b0762adc9e1789ba0362b9041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_PERIODIC</definition>
        <argsstring>(ui d, ui i, void *sys)</argsstring>
        <name>BCOND_PERIODIC</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has periodic boundary conditions.</para>
<para>Checks if particle <computeroutput>i</computeroutput> has crossed the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, shifts its coordinate in that dimension by multiples of <computeroutput>simbox.L[d]</computeroutput> so that it is within the bounds <computeroutput>(-simbox.L[d]/2,simbox.L[d]/2)</computeroutput>.</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="32" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="32" bodyend="45"/>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_ad3106cf4919cc0df6111afd9315a32e6_1ad3106cf4919cc0df6111afd9315a32e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_PERIODIC</definition>
        <argsstring>(ui d, ldf x[dim], void *sys)</argsstring>
        <name>BCOND_PERIODIC</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>x</declname>
          <array>[dim]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has periodic boundary conditions.</para>
<para>Checks if point <computeroutput>x</computeroutput> is outside the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, shifts its coordinate in that dimension by multiples of <computeroutput>simbox.L[d]</computeroutput> so that it is within the bounds <computeroutput>(-simbox.L[d]/2,simbox.L[d]/2)</computeroutput>.</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="47" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="47" bodyend="59"/>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_a2893f1abcebbd51fb9f4748ce2e97b7a_1a2893f1abcebbd51fb9f4748ce2e97b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_HARD</definition>
        <argsstring>(ui d, ui i, void *sys)</argsstring>
        <name>BCOND_HARD</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has hard boundary conditions.</para>
<para>Checks if particle <computeroutput>i</computeroutput> has crossed the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, updates its position and velocity to respect a hard wall reflection. The particle position is mirrored across the boundary wall, whereas its velocity component perpendicular to the boundary wall is reversed. <linebreak/>
 This function correctly takes into account skewed boundary conditions, and uses the box matrices <computeroutput>simbox.Lshear</computeroutput> and <computeroutput>simbox.vshear</computeroutput> to calculate the reflections if <computeroutput>simbox.useLshear</computeroutput> is <computeroutput>true</computeroutput>.</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="61" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="61" bodyend="117"/>
        <references refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" compoundref="autodiff_8libmd_8cc" startline="364" endline="367">abs</references>
        <references refid="autodiff_8libmd_8cc_af33bda4d5a7fc8ad1679ec339a730045_1af33bda4d5a7fc8ad1679ec339a730045" compoundref="autodiff_8libmd_8cc" startline="268" endline="272">sqrt</references>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
        <references refid="macros_8libmd_8h_a8d12d0f11fc9acd2f1fa22d80895ddae_1a8d12d0f11fc9acd2f1fa22d80895ddae" compoundref="macros_8libmd_8h" startline="70">WARNING</references>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_ad7ccf55e9e770d9f0e222c8c4374adde_1ad7ccf55e9e770d9f0e222c8c4374adde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_HARD</definition>
        <argsstring>(ui d, ldf x[dim], void *sys)</argsstring>
        <name>BCOND_HARD</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>x</declname>
          <array>[dim]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has hard boundary conditions.</para>
<para>Checks if point <computeroutput>x</computeroutput> is outside the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, updates its position to respect a hard wall reflection. The particle position is mirrored across the boundary wall. <linebreak/>
 This function correctly takes into account skewed boundary conditions, and uses the box matrices <computeroutput>simbox.Lshear</computeroutput> and <computeroutput>simbox.vshear</computeroutput> to calculate the reflections if <computeroutput>simbox.useLshear</computeroutput> is <computeroutput>true</computeroutput>.</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="119" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="119" bodyend="162"/>
        <references refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" compoundref="autodiff_8libmd_8cc" startline="364" endline="367">abs</references>
        <references refid="autodiff_8libmd_8cc_af33bda4d5a7fc8ad1679ec339a730045_1af33bda4d5a7fc8ad1679ec339a730045" compoundref="autodiff_8libmd_8cc" startline="268" endline="272">sqrt</references>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
        <references refid="macros_8libmd_8h_a8d12d0f11fc9acd2f1fa22d80895ddae_1a8d12d0f11fc9acd2f1fa22d80895ddae" compoundref="macros_8libmd_8h" startline="70">WARNING</references>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_af498e0276167e137bfc61a7d8b8f1da6_1af498e0276167e137bfc61a7d8b8f1da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_BOXSHEAR</definition>
        <argsstring>(ui d, ui i, void *sys)</argsstring>
        <name>BCOND_BOXSHEAR</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has sheared boundary conditions.</para>
<para>Checks if particle <computeroutput>i</computeroutput> has crossed the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, updates its position and velocity according to the box shear matrices stored in <computeroutput>simbox.Lshear</computeroutput> and <computeroutput>simbox.vshear</computeroutput>. The particle position</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="164" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="164" bodyend="182"/>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
      </memberdef>
      <memberdef kind="function" id="boundaryconditions_8libmd_8cc_a376c47134fbeb6fa1280dd1a7ee013e6_1a376c47134fbeb6fa1280dd1a7ee013e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
            <declname>dim</declname>
            <defname>dim</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BCOND_BOXSHEAR</definition>
        <argsstring>(ui d, ldf x[dim], void *sys)</argsstring>
        <name>BCOND_BOXSHEAR</name>
        <param>
          <type><ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref></type>
          <declname>x</declname>
          <array>[dim]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Periodicity function to be called if dimension <computeroutput>d</computeroutput> has sheared boundary conditions.</para>
<para>Checks if point <computeroutput>x</computeroutput> is outside the boundary perpendicular to dimension <computeroutput>d</computeroutput> and, if so, updates its position according to the box shear matrices stored in <computeroutput>simbox.Lshear</computeroutput> and <computeroutput>simbox.vshear</computeroutput>. The particle position</para>
        </inbodydescription>
        <location file="libmd-src/boundaryconditions.libmd.cc" line="184" column="17" bodyfile="libmd-src/boundaryconditions.libmd.cc" bodystart="184" bodyend="197"/>
        <references refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" compoundref="macros_8libmd_8h" startline="6">SYS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="boundaryconditions_8libmd_8cc_a4384389855e24d346feb2e60f23afb0b_1a4384389855e24d346feb2e60f23afb0b" refkind="member"><highlight class="preprocessor">#define<sp/>__libmd_src_file__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>libmd_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libmd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="libmd_8h_a125b8967bd2a122e454f6baa1268ee59_1a125b8967bd2a122e454f6baa1268ee59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a125b8967bd2a122e454f6baa1268ee59_1a125b8967bd2a122e454f6baa1268ee59" kindref="member">BCOND_NONE</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>d;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>i;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>sys;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="libmd_8h_a97ae56c5ca0f92c083ef8fc369ade6a6_1a97ae56c5ca0f92c083ef8fc369ade6a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a125b8967bd2a122e454f6baa1268ee59_1a125b8967bd2a122e454f6baa1268ee59" kindref="member">BCOND_NONE</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>x[dim],</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>d;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>x;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>sys;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="libmd_8h_a3ce0157b0762adc9e1789ba0362b9041_1a3ce0157b0762adc9e1789ba0362b9041" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a3ce0157b0762adc9e1789ba0362b9041_1a3ce0157b0762adc9e1789ba0362b9041" kindref="member">BCOND_PERIODIC</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>dx=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]*std::round(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].xp[d]-=dx;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]-=dx;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="libmd_8h_ad3106cf4919cc0df6111afd9315a32e6_1ad3106cf4919cc0df6111afd9315a32e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a3ce0157b0762adc9e1789ba0362b9041_1a3ce0157b0762adc9e1789ba0362b9041" kindref="member">BCOND_PERIODIC</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>x[dim],</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>dx=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]*std::round(x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>x[d]-=dx;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="libmd_8h_a2893f1abcebbd51fb9f4748ce2e97b7a_1a2893f1abcebbd51fb9f4748ce2e97b7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a2893f1abcebbd51fb9f4748ce2e97b7a_1a2893f1abcebbd51fb9f4748ce2e97b7a" kindref="member">BCOND_HARD</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.useLshear)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>s=0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>s+=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[k];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(s)<sp/>&gt;<sp/>0.5)<sp/></highlight><highlight class="comment">//<sp/>particle<sp/>has<sp/>hit<sp/>the<sp/>hard<sp/>boundary<sp/>as<sp/>distorted<sp/>by<sp/>the<sp/>shear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(s)<sp/>&gt;<sp/>1.)<sp/>{<sp/><ref refid="macros_8libmd_8h_a8d12d0f11fc9acd2f1fa22d80895ddae_1a8d12d0f11fc9acd2f1fa22d80895ddae" kindref="member">WARNING</ref>(</highlight><highlight class="stringliteral">&quot;dynamics<sp/>led<sp/>to<sp/>particle<sp/>displacement<sp/>bigger<sp/>than<sp/>box<sp/>size;<sp/>hard<sp/>boundary<sp/>reflections<sp/>undefined&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>nhat[dim];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>nlen=0.,vperp=0.,xperp=0.,x0perp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>normal<sp/>vector<sp/>to<sp/>the<sp/>box<sp/>boundary<sp/>in<sp/>dimension<sp/>d<sp/>is<sp/>the<sp/>dth<sp/>row<sp/>of<sp/>LshearInv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>nlen<sp/>+=<sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlen<sp/>=<sp/><ref refid="autodiff_8libmd_8cc_af33bda4d5a7fc8ad1679ec339a730045_1af33bda4d5a7fc8ad1679ec339a730045" kindref="member">sqrt</ref>(nlen);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>of<sp/>velocity<sp/>and<sp/>position<sp/>perpendicular<sp/>to<sp/>boundary<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nhat[k]<sp/>=<sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]/nlen;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vperp<sp/>+=<sp/>nhat[k]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].dx[k];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xperp<sp/>+=<sp/>nhat[k]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[k];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0perp<sp/>=<sp/>nhat[d]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.Lshear[d][d]*0.5*(s<sp/>&gt;<sp/>0.?<sp/>1.:-1.);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>perpendicular<sp/>component<sp/>twice<sp/>to<sp/>get<sp/>reflected<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].dx[k]<sp/>-=<sp/>2.0*vperp*nhat[k];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[k]<sp/>-=<sp/>2.0*(xperp-x0perp)*nhat[k];<sp/></highlight><highlight class="comment">//<sp/>reflection<sp/>about<sp/>a<sp/>plane<sp/>passing<sp/>through<sp/>point<sp/>set<sp/>by<sp/>x0perp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].xp[k]<sp/>+=<sp/>2.0*(xperp-x0perp)*nhat[k];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>xnew=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]*(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]+0.5-2.0*floor(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]/(2.0*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d])+0.75))-0.5);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>sign=(((int)std::round(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]))%2?-1.0:1.0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].xp[d]+=sign*(xnew-<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]=xnew;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].dx[d]*=sign;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="libmd_8h_ad7ccf55e9e770d9f0e222c8c4374adde_1ad7ccf55e9e770d9f0e222c8c4374adde" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_a2893f1abcebbd51fb9f4748ce2e97b7a_1a2893f1abcebbd51fb9f4748ce2e97b7a" kindref="member">BCOND_HARD</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>x[dim],</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.useLshear)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>s=0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>s+=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]*x[k];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(s)<sp/>&gt;<sp/>0.5)<sp/></highlight><highlight class="comment">//<sp/>particle<sp/>has<sp/>hit<sp/>the<sp/>hard<sp/>boundary<sp/>as<sp/>distorted<sp/>by<sp/>the<sp/>shear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(s)<sp/>&gt;<sp/>1.)<sp/>{<sp/><ref refid="macros_8libmd_8h_a8d12d0f11fc9acd2f1fa22d80895ddae_1a8d12d0f11fc9acd2f1fa22d80895ddae" kindref="member">WARNING</ref>(</highlight><highlight class="stringliteral">&quot;dynamics<sp/>led<sp/>to<sp/>particle<sp/>displacement<sp/>bigger<sp/>than<sp/>box<sp/>size;<sp/>hard<sp/>boundary<sp/>reflections<sp/>undefined&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>nhat[dim];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>nlen=0.,xperp=0.,x0perp;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>normal<sp/>vector<sp/>to<sp/>the<sp/>box<sp/>boundary<sp/>in<sp/>dimension<sp/>d<sp/>is<sp/>the<sp/>dth<sp/>row<sp/>of<sp/>LshearInv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>nlen<sp/>+=<sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlen<sp/>=<sp/><ref refid="autodiff_8libmd_8cc_af33bda4d5a7fc8ad1679ec339a730045_1af33bda4d5a7fc8ad1679ec339a730045" kindref="member">sqrt</ref>(nlen);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>of<sp/>velocity<sp/>and<sp/>position<sp/>perpendicular<sp/>to<sp/>boundary<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nhat[k]<sp/>=<sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.LshearInv[d][k]/nlen;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xperp<sp/>+=<sp/>nhat[k]*x[k];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0perp<sp/>=<sp/>nhat[d]*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.Lshear[d][d]*0.5*(s<sp/>&gt;<sp/>0.?<sp/>1.:-1.);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>perpendicular<sp/>component<sp/>twice<sp/>to<sp/>get<sp/>reflected<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>x[k]<sp/>-=<sp/>2.0*(xperp-x0perp)*nhat[k];<sp/></highlight><highlight class="comment">//<sp/>reflection<sp/>about<sp/>a<sp/>plane<sp/>passing<sp/>through<sp/>point<sp/>set<sp/>by<sp/>x0perp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>xnew=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]*(<ref refid="autodiff_8libmd_8cc_aef1f4db2bbc91c997fdc24226ea63d52_1aef1f4db2bbc91c997fdc24226ea63d52" kindref="member">std::abs</ref>(x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]+0.5-2.0*floor(x[d]/(2.0*<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d])+0.75))-0.5);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[d]=xnew;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="libmd_8h_af498e0276167e137bfc61a7d8b8f1da6_1af498e0276167e137bfc61a7d8b8f1da6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_af498e0276167e137bfc61a7d8b8f1da6_1af498e0276167e137bfc61a7d8b8f1da6" kindref="member">BCOND_BOXSHEAR</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>i,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>boundaryCrossing=std::round(<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)boundaryCrossing)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].x[k]-=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.Lshear[k][d]*boundaryCrossing;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].xp[k]-=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.Lshear[k][d]*boundaryCrossing;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;particles[i].dx[k]-=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.vshear[k][d]*boundaryCrossing;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="libmd_8h_a376c47134fbeb6fa1280dd1a7ee013e6_1a376c47134fbeb6fa1280dd1a7ee013e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ui<sp/>dim&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boundaryconditions_8libmd_8cc_af498e0276167e137bfc61a7d8b8f1da6_1af498e0276167e137bfc61a7d8b8f1da6" kindref="member">BCOND_BOXSHEAR</ref>(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>d,<ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>x[dim],</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="libmd_8h_a9b1cd8bf0a06d4a62c19f7953a3487ea_1a9b1cd8bf0a06d4a62c19f7953a3487ea" kindref="member">ldf</ref><sp/>boundaryCrossing=std::round(x[d]/<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.L[d]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)boundaryCrossing)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="libmd_8h_aa0f39ee33b87675e11229913d432ffe7_1aa0f39ee33b87675e11229913d432ffe7" kindref="member">ui</ref><sp/>k=0;k&lt;dim;k++)<sp/>x[k]-=<ref refid="macros_8libmd_8h_ae3d9f52a1a315303ad04f0576bd42a25_1ae3d9f52a1a315303ad04f0576bd42a25" kindref="member">SYS</ref>-&gt;simbox.Lshear[k][d]*boundaryCrossing;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="libmd-src/boundaryconditions.libmd.cc"/>
  </compounddef>
</doxygen>
